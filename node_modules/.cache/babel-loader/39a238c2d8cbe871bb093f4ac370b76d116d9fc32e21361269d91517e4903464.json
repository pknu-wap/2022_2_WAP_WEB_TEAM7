{"ast":null,"code":"import Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport axios from \"axios\";\nconst OptionEdit = (optionName, optionList) => {\n  let index = 0;\n  console.log(JSON.stringify(optionList));\n  const data = async () => await axios.post(\"http://127.0.0.1:8000/webKiosk/client/option/update/\", {\n    market_name: \"S\",\n    old_name: optionName,\n    new: JSON.stringify(optionList)\n  }).then(response => {\n    console.log(response);\n  });\n  //   show(false);\n};\n\n// axios\n//   return (\n//     <Form onSubmit={(e) => handlesubmit(e)}>\n//       <Row className=\"mb-3\">\n//         <Form.Group as={Col} controlId=\"formGridEmail\">\n//           <Form.Label>옵션 이름</Form.Label>\n//           <Form.Control type=\"text\" placeholder=\"Enter email\" />\n//         </Form.Group>\n//       </Row>\n\n//       <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\n//         <Row>\n//           <Col>\n//             <Form.Label>항목1 이름</Form.Label>\n//             <Form.Control placeholder=\"이름을 입력해주세요\" />\n//           </Col>\n//           <Col>\n//             <Form.Label>항목1 가격</Form.Label>\n//             <Form.Control type=\"Number\" placeholder=\"Last name\" min=\"0\" />\n//           </Col>\n//         </Row>\n//       </Form.Group>\n\n//       <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\n//         <Row>\n//           <Col>\n//             <Form.Label>항목1 이름</Form.Label>\n//             <Form.Control placeholder=\"이름을 입력해주세요\" />\n//           </Col>\n//           <Col>\n//             <Form.Label>항목1 가격</Form.Label>\n//             <Form.Control type=\"Number\" placeholder=\"Last name\" min=\"0\" />\n//           </Col>\n//         </Row>\n//       </Form.Group>\n\n//       <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\n//         <Row>\n//           <Col>\n//             <Form.Label>항목3 이름</Form.Label>\n//             <Form.Control placeholder=\"이름을 입력해주세요\" />\n//           </Col>\n//           <Col>\n//             <Form.Label>항목3 가격</Form.Label>\n//             <Form.Control type=\"Number\" placeholder=\"Last name\" min=\"0\" />\n//           </Col>\n//         </Row>\n//       </Form.Group>\n//       <Button variant=\"primary\" type=\"submit\">\n//         생성하기\n//       </Button>\n//       <Button type=\"button\" onClick={() => show(false)}>\n//         취소하기\n//       </Button>\n//     </Form>\n//   );\n// };\n_c = OptionEdit;\nexport default OptionEdit;\nvar _c;\n$RefreshReg$(_c, \"OptionEdit\");","map":{"version":3,"names":["Button","Col","Form","Row","axios","OptionEdit","optionName","optionList","index","console","log","JSON","stringify","data","post","market_name","old_name","new","then","response"],"sources":["C:/Users/문동욱/Desktop/Wab-project/Owner/2022_2_WAP_WEB_TEAM7/src/Menu/Option/OptionEdit.js"],"sourcesContent":["import Button from \"react-bootstrap/Button\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport axios from \"axios\";\r\n\r\nconst OptionEdit = (optionName, optionList) => {\r\n  let index = 0;\r\n\r\n  console.log(JSON.stringify(optionList));\r\n\r\n  const data = async () =>\r\n    await axios\r\n      .post(\"http://127.0.0.1:8000/webKiosk/client/option/update/\", {\r\n        market_name: \"S\",\r\n        old_name: optionName,\r\n        new: JSON.stringify(optionList),\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n      });\r\n  //   show(false);\r\n};\r\n\r\n// axios\r\n//   return (\r\n//     <Form onSubmit={(e) => handlesubmit(e)}>\r\n//       <Row className=\"mb-3\">\r\n//         <Form.Group as={Col} controlId=\"formGridEmail\">\r\n//           <Form.Label>옵션 이름</Form.Label>\r\n//           <Form.Control type=\"text\" placeholder=\"Enter email\" />\r\n//         </Form.Group>\r\n//       </Row>\r\n\r\n//       <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n//         <Row>\r\n//           <Col>\r\n//             <Form.Label>항목1 이름</Form.Label>\r\n//             <Form.Control placeholder=\"이름을 입력해주세요\" />\r\n//           </Col>\r\n//           <Col>\r\n//             <Form.Label>항목1 가격</Form.Label>\r\n//             <Form.Control type=\"Number\" placeholder=\"Last name\" min=\"0\" />\r\n//           </Col>\r\n//         </Row>\r\n//       </Form.Group>\r\n\r\n//       <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n//         <Row>\r\n//           <Col>\r\n//             <Form.Label>항목1 이름</Form.Label>\r\n//             <Form.Control placeholder=\"이름을 입력해주세요\" />\r\n//           </Col>\r\n//           <Col>\r\n//             <Form.Label>항목1 가격</Form.Label>\r\n//             <Form.Control type=\"Number\" placeholder=\"Last name\" min=\"0\" />\r\n//           </Col>\r\n//         </Row>\r\n//       </Form.Group>\r\n\r\n//       <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n//         <Row>\r\n//           <Col>\r\n//             <Form.Label>항목3 이름</Form.Label>\r\n//             <Form.Control placeholder=\"이름을 입력해주세요\" />\r\n//           </Col>\r\n//           <Col>\r\n//             <Form.Label>항목3 가격</Form.Label>\r\n//             <Form.Control type=\"Number\" placeholder=\"Last name\" min=\"0\" />\r\n//           </Col>\r\n//         </Row>\r\n//       </Form.Group>\r\n//       <Button variant=\"primary\" type=\"submit\">\r\n//         생성하기\r\n//       </Button>\r\n//       <Button type=\"button\" onClick={() => show(false)}>\r\n//         취소하기\r\n//       </Button>\r\n//     </Form>\r\n//   );\r\n// };\r\n\r\nexport default OptionEdit;\r\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,UAAU,GAAG,CAACC,UAAU,EAAEC,UAAU,KAAK;EAC7C,IAAIC,KAAK,GAAG,CAAC;EAEbC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACL,UAAU,CAAC,CAAC;EAEvC,MAAMM,IAAI,GAAG,YACX,MAAMT,KAAK,CACRU,IAAI,CAAC,sDAAsD,EAAE;IAC5DC,WAAW,EAAE,GAAG;IAChBC,QAAQ,EAAEV,UAAU;IACpBW,GAAG,EAAEN,IAAI,CAACC,SAAS,CAACL,UAAU;EAChC,CAAC,CAAC,CACDW,IAAI,CAAEC,QAAQ,IAAK;IAClBV,OAAO,CAACC,GAAG,CAACS,QAAQ,CAAC;EACvB,CAAC,CAAC;EACN;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,KA1EMd,UAAU;AA4EhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}