{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uBB38\\uB3D9\\uC6B1\\\\Desktop\\\\Wab-project\\\\Owner\\\\2022_2_WAP_WEB_TEAM7\\\\src\\\\Menu\\\\MenuList.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Edit from \"./MenuEdit/Edit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MenuList = _ref => {\n  _s();\n  let {\n    categoryName\n  } = _ref;\n  //메뉴 데이터를 담을 변수\n  const [Alldata, setAlldata] = useState([]);\n  //전체 카테고리별 메뉴를 Alldata에 저장\n  const allMenu = async () => {\n    await axios.post(\"http://127.0.0.1:8000/webKiosk/client/meca/read/\", {\n      market_name: \"S\",\n      category_name: categoryName\n    }).then(response => {\n      setAlldata(response.data.sessionid);\n    });\n    return;\n  };\n  //모달 창을 열고 닫는 변수\n  const [IsModalOpen, setIsModalOpen] = useState(false);\n  //선택한 메뉴값을 모달에 전달하는 변수\n  const [selectMenu, setSelectMenu] = useState([]);\n  //처음에 한번 allMenu 실행\n  useEffect(() => {\n    allMenu();\n  }, []);\n  //Alldata 데이터가 없을때 처리\n  if (Alldata === null || Alldata === undefined) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uBA54\\uB274\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  function MenuStatus(logic) {\n    if (logic == true) {\n      return \"판매중지\";\n    } else {\n      return \"판매중\";\n    }\n  }\n  //리스트 작성 파트\n  let index = 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tableContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          id: \"tre\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"col\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"col\",\n            children: \"\\uC774\\uB984\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"col\",\n            children: \"\\uAC00\\uACA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"col\",\n            children: \"\\uD310\\uB9E4\\uC0C1\\uD0DC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"col\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.keys(Alldata).map(menuindex => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            id: index,\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: index++\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Alldata[menuindex].menu_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Alldata[menuindex].price + \"원\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: MenuStatus(Alldata[menuindex].is_forbidden)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setIsModalOpen(true);\n                  setSelectMenu(Alldata[menuindex]);\n                },\n                children: \"\\uD3B8\\uC9D1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              show: IsModalOpen,\n              children: /*#__PURE__*/_jsxDEV(Edit, {\n                MenuInfo: selectMenu,\n                IsModalOpen: setIsModalOpen,\n                rerender: allMenu\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(MenuList, \"57W1kDYMERpRgyZcte2AEV9FBic=\");\n_c = MenuList;\nexport default MenuList;\nvar _c;\n$RefreshReg$(_c, \"MenuList\");","map":{"version":3,"names":["axios","useEffect","useState","Modal","Edit","MenuList","categoryName","Alldata","setAlldata","allMenu","post","market_name","category_name","then","response","data","sessionid","IsModalOpen","setIsModalOpen","selectMenu","setSelectMenu","undefined","MenuStatus","logic","index","Object","keys","map","menuindex","menu_name","price","is_forbidden"],"sources":["C:/Users/문동욱/Desktop/Wab-project/Owner/2022_2_WAP_WEB_TEAM7/src/Menu/MenuList.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Edit from \"./MenuEdit/Edit\";\r\nconst MenuList = ({ categoryName }) => {\r\n  //메뉴 데이터를 담을 변수\r\n  const [Alldata, setAlldata] = useState([]);\r\n  //전체 카테고리별 메뉴를 Alldata에 저장\r\n  const allMenu = async () => {\r\n    await axios\r\n      .post(\"http://127.0.0.1:8000/webKiosk/client/meca/read/\", {\r\n        market_name: \"S\",\r\n        category_name: categoryName,\r\n      })\r\n      .then((response) => {\r\n        setAlldata(response.data.sessionid);\r\n      });\r\n    return;\r\n  };\r\n  //모달 창을 열고 닫는 변수\r\n  const [IsModalOpen, setIsModalOpen] = useState(false);\r\n  //선택한 메뉴값을 모달에 전달하는 변수\r\n  const [selectMenu, setSelectMenu] = useState([]);\r\n  //처음에 한번 allMenu 실행\r\n  useEffect(() => {\r\n    allMenu();\r\n  }, []);\r\n  //Alldata 데이터가 없을때 처리\r\n  if (Alldata === null || Alldata === undefined) {\r\n    return <h2>메뉴가 없습니다.</h2>;\r\n  }\r\n  function MenuStatus(logic) {\r\n    if (logic == true) {\r\n      return \"판매중지\";\r\n    } else {\r\n      return \"판매중\";\r\n    }\r\n  }\r\n  //리스트 작성 파트\r\n  let index = 0;\r\n  return (\r\n    <div className=\"tableContainer\">\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr id=\"tre\">\r\n            <th className=\"col\">#</th>\r\n            <th className=\"col\">이름</th>\r\n            <th className=\"col\">가격</th>\r\n            <th className=\"col\">판매상태</th>\r\n            <th className=\"col\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.keys(Alldata).map((menuindex) => {\r\n            return (\r\n              <tr key={index} id={index}>\r\n                <th>{index++}</th>\r\n                <td>{Alldata[menuindex].menu_name}</td>\r\n                <td>{Alldata[menuindex].price + \"원\"}</td>\r\n                <td>{MenuStatus(Alldata[menuindex].is_forbidden)}</td>\r\n                <td>\r\n                  <button\r\n                    onClick={() => {\r\n                      setIsModalOpen(true);\r\n                      setSelectMenu(Alldata[menuindex]);\r\n                    }}\r\n                  >\r\n                    편집\r\n                  </button>\r\n                </td>\r\n                <Modal show={IsModalOpen}>\r\n                  <Edit\r\n                    MenuInfo={selectMenu}\r\n                    IsModalOpen={setIsModalOpen}\r\n                    rerender={allMenu}\r\n                  />\r\n                </Modal>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}