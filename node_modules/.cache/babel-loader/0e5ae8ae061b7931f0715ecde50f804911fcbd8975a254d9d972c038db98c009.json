{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uBB38\\uB3D9\\uC6B1\\\\Desktop\\\\Wab-project\\\\Owner\\\\2022_2_WAP_WEB_TEAM7\\\\src\\\\Menu\\\\Option\\\\OptionEdit.js\",\n  _s = $RefreshSig$();\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OptionEdit = _ref => {\n  _s();\n  let {\n    optionName,\n    optionList,\n    show\n  } = _ref;\n  //선택한 옵션의 하위 항목을 담을 변수\n  const [subOption, setsubOption] = useState(\"\");\n  //선택한 옵션의 하위 항목만 골라내기\n  useEffect(() => {\n    optionList.map(item => {\n      if (item.option_name === optionName) {\n        setsubOption(item.option_list);\n      }\n    });\n  }, []);\n  useEffect(() => {\n    console.log(JSON.parse(`[${subOption}]`));\n  }, [subOption]);\n  function handlesubmit(event) {\n    console.log(\"event\", event.target.length);\n    event.preventDefault();\n    const option_name = event.target[0].value;\n    let option_list = \"{\";\n    for (let i = 1; i < event.target.length - 2; i++) {\n      if (i % 2 == 0) {\n        option_list += `\"${event.target[i - 1].value}\"` + \":\" + String(event.target[i].value);\n        if (i != event.target.length - 3) {\n          option_list += \",\";\n        }\n      }\n    }\n    option_list += \"}\";\n    console.log(option_list);\n    const data = async () => {\n      let dummy = `option_name`;\n      if (option_name === optionName) {\n        dummy = \"dummyData\";\n      }\n      await axios.post(\"http://127.0.0.1:8000/webKiosk/client/option/update/\", {\n        market_name: \"S\",\n        old_name: optionName,\n        new: `{\"${dummy}\": \"${option_name}\", \"option_list\":${JSON.stringify(option_list).replace(\"/\", \"\")}}`\n      }).then(response => {\n        console.log(response);\n      });\n    };\n    data();\n  }\n  const sub = JSON.parse(`[${subOption}]`);\n  if (sub[0] === null || sub[0] === undefined) {\n    return;\n  }\n  console.log(sub[0]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: e => handlesubmit(e),\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Col,\n        controlId: \"formGridEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"\\uC635\\uC158 \\uC774\\uB984\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          defaultValue: optionName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), Object.keys(sub[0]).map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formGridAddress1\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"\\uD56D\\uBAA9\", i + 1, \" \\uC774\\uB984\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"\\uC774\\uB984\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n              defaultValue: item,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"\\uD56D\\uBAA9\", i + 1, \" \\uAC00\\uACA9\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"Number\",\n              placeholder: \"Last name\",\n              min: \"0\",\n              defaultValue: sub[0][item],\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      children: \"\\uC0DD\\uC131\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      onClick: () => show(false),\n      children: \"\\uCDE8\\uC18C\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(OptionEdit, \"qkDfwIUduAzlMX8fuMpaT7oDTyk=\");\n_c = OptionEdit;\nexport default OptionEdit;\nvar _c;\n$RefreshReg$(_c, \"OptionEdit\");","map":{"version":3,"names":["Button","Col","Form","Row","axios","React","useEffect","useState","OptionEdit","optionName","optionList","show","subOption","setsubOption","map","item","option_name","option_list","console","log","JSON","parse","handlesubmit","event","target","length","preventDefault","value","i","String","data","dummy","post","market_name","old_name","new","stringify","replace","then","response","sub","undefined","e","Object","keys"],"sources":["C:/Users/문동욱/Desktop/Wab-project/Owner/2022_2_WAP_WEB_TEAM7/src/Menu/Option/OptionEdit.js"],"sourcesContent":["import Button from \"react-bootstrap/Button\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst OptionEdit = ({ optionName, optionList, show }) => {\r\n  //선택한 옵션의 하위 항목을 담을 변수\r\n  const [subOption, setsubOption] = useState(\"\");\r\n  //선택한 옵션의 하위 항목만 골라내기\r\n  useEffect(() => {\r\n    optionList.map((item) => {\r\n      if (item.option_name === optionName) {\r\n        setsubOption(item.option_list);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(JSON.parse(`[${subOption}]`));\r\n  }, [subOption]);\r\n\r\n  function handlesubmit(event) {\r\n    console.log(\"event\", event.target.length);\r\n    event.preventDefault();\r\n    const option_name = event.target[0].value;\r\n    let option_list = \"{\";\r\n    for (let i = 1; i < event.target.length - 2; i++) {\r\n      if (i % 2 == 0) {\r\n        option_list +=\r\n          `\"${event.target[i - 1].value}\"` +\r\n          \":\" +\r\n          String(event.target[i].value);\r\n        if (i != event.target.length - 3) {\r\n          option_list += \",\";\r\n        }\r\n      }\r\n    }\r\n    option_list += \"}\";\r\n\r\n    console.log(option_list);\r\n\r\n    const data = async () => {\r\n      let dummy = `option_name`;\r\n      if (option_name === optionName) {\r\n        dummy = \"dummyData\";\r\n      }\r\n      await axios\r\n        .post(\"http://127.0.0.1:8000/webKiosk/client/option/update/\", {\r\n          market_name: \"S\",\r\n          old_name: optionName,\r\n          new: `{\"${dummy}\": \"${option_name}\", \"option_list\":${JSON.stringify(\r\n            option_list\r\n          ).replace(\"/\", \"\")}}`,\r\n        })\r\n        .then((response) => {\r\n          console.log(response);\r\n        });\r\n    };\r\n    data();\r\n  }\r\n  const sub = JSON.parse(`[${subOption}]`);\r\n  if (sub[0] === null || sub[0] === undefined) {\r\n    return;\r\n  }\r\n  console.log(sub[0]);\r\n  return (\r\n    <Form onSubmit={(e) => handlesubmit(e)}>\r\n      <Row className=\"mb-3\">\r\n        <Form.Group as={Col} controlId=\"formGridEmail\">\r\n          <Form.Label>옵션 이름</Form.Label>\r\n          <Form.Control type=\"text\" defaultValue={optionName} />\r\n        </Form.Group>\r\n      </Row>\r\n      {Object.keys(sub[0]).map((item, i) => {\r\n        return (\r\n          <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\r\n            <Row>\r\n              <Col>\r\n                <Form.Label>항목{i + 1} 이름</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"이름을 입력해주세요\"\r\n                  defaultValue={item}\r\n                  required\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <Form.Label>항목{i + 1} 가격</Form.Label>\r\n                <Form.Control\r\n                  type=\"Number\"\r\n                  placeholder=\"Last name\"\r\n                  min=\"0\"\r\n                  defaultValue={sub[0][item]}\r\n                  required\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n        );\r\n      })}\r\n\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        생성하기\r\n      </Button>\r\n      <Button type=\"button\" onClick={() => show(false)}>\r\n        취소하기\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default OptionEdit;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}