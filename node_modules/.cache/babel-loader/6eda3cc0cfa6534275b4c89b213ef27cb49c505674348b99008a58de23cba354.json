{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uBB38\\uB3D9\\uC6B1\\\\Desktop\\\\Wab-project\\\\Owner\\\\2022_2_WAP_WEB_TEAM7\\\\src\\\\Menu\\\\MenuList.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Edit from \"./MenuEdit/Edit\";\nimport CreateMenu from \"./CreateMenu\";\nimport { DelMenu } from \"./DeleteMenu.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MenuList = _ref => {\n  _s();\n  let {\n    categoryName,\n    SelectTap\n  } = _ref;\n  //메뉴 데이터를 담을 변수\n  const [Alldata, setAlldata] = useState([]);\n  //전체 카테고리별 메뉴를 Alldata에 저장\n  const allMenu = async () => {\n    await axios.post(\"http://127.0.0.1:8000/webKiosk/meca/\", {\n      market_name: \"S\",\n      category_name: categoryName\n    }).then(response => {\n      setAlldata(response.data);\n    });\n    return;\n  };\n  // 메뉴 생성 모달 창을 열고 닫는 변수\n  const [IsplusOpen, setIsplusOpen] = useState(false);\n\n  //모달 창을 열고 닫는 변수\n  const [IsModalOpen, setIsModalOpen] = useState(false);\n  //선택한 메뉴값을 모달에 전달하는 변수\n  const [selectMenu, setSelectMenu] = useState([]);\n  //처음에 한번 allMenu 실행\n  useEffect(() => {\n    allMenu();\n  }, []);\n\n  //Alldata 데이터가 없을때 처리\n  if (Alldata === null || Alldata === undefined) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uBA54\\uB274\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n  function MenuStatus(logic) {\n    if (logic == true) {\n      return \"판매중지\";\n    } else {\n      return \"판매중\";\n    }\n  }\n  //리스트 작성 파트\n  let index = 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tableContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          id: \"tre\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"col\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"col\",\n            children: \"\\uC774\\uB984\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"col\",\n            children: \"\\uAC00\\uACA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"col\",\n            children: \"\\uD310\\uB9E4\\uC0C1\\uD0DC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"col\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.keys(Alldata).map(menuindex => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            id: index,\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: index++\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Alldata[menuindex].menu_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Alldata[menuindex].price + \"원\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: MenuStatus(Alldata[menuindex].is_forbidden)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setIsModalOpen(true);\n                  setSelectMenu(Alldata[menuindex]);\n                },\n                children: \"\\uD3B8\\uC9D1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => DelMenu(Alldata, Alldata[menuindex].menu_name),\n                children: \"\\uC0AD\\uC81C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: IsModalOpen,\n      children: /*#__PURE__*/_jsxDEV(Edit, {\n        MenuInfo: selectMenu,\n        IsModalOpen: setIsModalOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: IsplusOpen,\n      children: /*#__PURE__*/_jsxDEV(CreateMenu, {\n        SelectTap: SelectTap,\n        IsOpen: setIsplusOpen,\n        MenuList: Alldata\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"MenuPlus\",\n      onClick: () => setIsplusOpen(true),\n      children: \"\\uBA54\\uB274 \\uCD94\\uAC00\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(MenuList, \"PVWDrKH/N1jpaXmz1FJYUxG510E=\");\n_c = MenuList;\nexport default MenuList;\nvar _c;\n$RefreshReg$(_c, \"MenuList\");","map":{"version":3,"names":["axios","useEffect","useState","Modal","Edit","CreateMenu","DelMenu","MenuList","categoryName","SelectTap","Alldata","setAlldata","allMenu","post","market_name","category_name","then","response","data","IsplusOpen","setIsplusOpen","IsModalOpen","setIsModalOpen","selectMenu","setSelectMenu","undefined","MenuStatus","logic","index","Object","keys","map","menuindex","menu_name","price","is_forbidden"],"sources":["C:/Users/문동욱/Desktop/Wab-project/Owner/2022_2_WAP_WEB_TEAM7/src/Menu/MenuList.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Edit from \"./MenuEdit/Edit\";\r\nimport CreateMenu from \"./CreateMenu\";\r\nimport { DelMenu } from \"./DeleteMenu.js\";\r\n\r\nconst MenuList = ({ categoryName, SelectTap }) => {\r\n  //메뉴 데이터를 담을 변수\r\n  const [Alldata, setAlldata] = useState([]);\r\n  //전체 카테고리별 메뉴를 Alldata에 저장\r\n  const allMenu = async () => {\r\n    await axios\r\n      .post(\"http://127.0.0.1:8000/webKiosk/meca/\", {\r\n        market_name: \"S\",\r\n        category_name: categoryName,\r\n      })\r\n      .then((response) => {\r\n        setAlldata(response.data);\r\n      });\r\n    return;\r\n  };\r\n  // 메뉴 생성 모달 창을 열고 닫는 변수\r\n  const [IsplusOpen, setIsplusOpen] = useState(false);\r\n\r\n  //모달 창을 열고 닫는 변수\r\n  const [IsModalOpen, setIsModalOpen] = useState(false);\r\n  //선택한 메뉴값을 모달에 전달하는 변수\r\n  const [selectMenu, setSelectMenu] = useState([]);\r\n  //처음에 한번 allMenu 실행\r\n  useEffect(() => {\r\n    allMenu();\r\n  }, []);\r\n\r\n  //Alldata 데이터가 없을때 처리\r\n  if (Alldata === null || Alldata === undefined) {\r\n    return <h2>메뉴가 없습니다.</h2>;\r\n  }\r\n  function MenuStatus(logic) {\r\n    if (logic == true) {\r\n      return \"판매중지\";\r\n    } else {\r\n      return \"판매중\";\r\n    }\r\n  }\r\n  //리스트 작성 파트\r\n  let index = 0;\r\n  return (\r\n    <div className=\"tableContainer\">\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr id=\"tre\">\r\n            <th className=\"col\">#</th>\r\n            <th className=\"col\">이름</th>\r\n            <th className=\"col\">가격</th>\r\n            <th className=\"col\">판매상태</th>\r\n            <th className=\"col\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.keys(Alldata).map((menuindex) => {\r\n            return (\r\n              <tr key={index} id={index}>\r\n                <th>{index++}</th>\r\n                <td>{Alldata[menuindex].menu_name}</td>\r\n                <td>{Alldata[menuindex].price + \"원\"}</td>\r\n                <td>{MenuStatus(Alldata[menuindex].is_forbidden)}</td>\r\n                <td>\r\n                  <button\r\n                    onClick={() => {\r\n                      setIsModalOpen(true);\r\n                      setSelectMenu(Alldata[menuindex]);\r\n                    }}\r\n                  >\r\n                    편집\r\n                  </button>\r\n                  <button\r\n                    onClick={() =>\r\n                      DelMenu(Alldata, Alldata[menuindex].menu_name)\r\n                    }\r\n                  >\r\n                    삭제\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <Modal show={IsModalOpen}>\r\n        <Edit MenuInfo={selectMenu} IsModalOpen={setIsModalOpen} />\r\n      </Modal>\r\n      <Modal show={IsplusOpen}>\r\n        <CreateMenu\r\n          SelectTap={SelectTap}\r\n          IsOpen={setIsplusOpen}\r\n          MenuList={Alldata}\r\n        />\r\n      </Modal>\r\n      <button className=\"MenuPlus\" onClick={() => setIsplusOpen(true)}>\r\n        메뉴 추가하기\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}